//错误提示码
enum TErrorType{
	// 无效
	Invalid = 0;
	//房间号为空
	RoomIdIsNull = 1;
	//该玩家不在房间中
	PlayerNoInRoom = 2;
	//该玩家已经在房间中
	PlayerInRoom = 3;
	//该玩家不存在
	PlayerIsNo = 4;
	//其他设备登录
	OtherLogin = 5;
}
enum TPosShapeType{
	//方形
	Square = 0;
	//圆形
	Round = 1;
}
message MsgMsgData{
	//id
	optional uint32 MsgId = 1;
	//消息名字
	optional string MsgName = 2;
}
//初始化消息id,服务器注册列表0为该消息
message MsgMsgInit{
	repeated MsgMsgData MsgList = 1;
}
//点信息
message MsgPosInfo{
	//x
	optional float PosX = 1;
	//y
	optional float PosY = 2;
}
//玩家信息
message MsgPlayerInfo{
	//账号
	optional string AccountId = 1;
	//房间id
	optional uint32 RoomId = 2;
	//朝向x
	optional float DirectionX = 3;
	//朝向y
	optional float DirectionY = 4;
	//速度
	optional float Speed = 5;
	//长度
	optional uint32 SurplusLength = 6;
	//坐标列表(从头到尾)
	repeated MsgPosInfo PosList = 7;
}
//登录,C发送账号到S,S回复不带参数
message MsgLogin{
	optional string AccountId = 1;
}
//移动,C发摇杆的值,S根据该值计算玩家要去的点回复给C
message MsgMove{
	//账号
	optional string AccountId = 1;
	//目标点
	optional MsgPosInfo TargetPos = 2;
}
//单点结构
message MsgPosStruct{
	//账号
	optional string AccountId = 1;
	//x
	optional float PosX = 2;
	//y
	optional float PosY = 3;
}
//服务器心跳同步到客户端
message MsgAddTargetPos{
	//玩家新增点位
	repeated MsgPosStruct PosList = 1;
}
//食物结构
message MsgFoodStruct{
	//id
	optional uint32 Id = 1;
	//x
	optional float PosX = 2;
	//y
	optional float PosY = 3;
	//半径
	optional float Radius = 4;
	//分数
	optional uint32 Score = 5;
}
//添加食物
message MsgAddFood{
	//食物
	repeated MsgFoodStruct FoodList = 1;
}
//删除食物
message MsgDelFood{
	repeated uint32 FoodList = 1;
}
//房间数据
message MsgRoomData{
	//房间id
	optional uint32 RoomId = 1;
	//宽(对应x)
	optional float RoomW = 2;
	//高(对应y)
	optional float RoomH = 3;
	//玩家数量
	optional uint32 PlayerCount = 4;
	//现有玩家列表
	repeated string AccountIdList = 5;
}
//房间,C发送查看房间信息到S,S回复房间信息给C
message MsgRoomInfo{
	//房间列表
	repeated MsgRoomData RoomList = 4;
}
//进入房间
message MsgRoomEnter{
	//房间id
	optional uint32 RoomId = 1;
	//账号
	optional string AccountId = 2;
	//宽(对应x)
	optional float RoomW = 3;
	//高(对应y)
	optional float RoomH = 4;
	//玩家数量
	optional uint32 PlayerCount = 5;
	//现有玩家列表
	repeated MsgPlayerInfo PlayerList = 6;
}
//退出房间，C无需参数，S无需参数
message MsgExitRoom{
	//账号
	optional string AccountId = 1;
}
//错误码
message MsgError{
	//错误码
	optional uint32 ErrorIdx = 1;
}
//心跳包
message MsgHeartbeat{
}